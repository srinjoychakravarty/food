{"version":3,"sources":["webpack://food/./src/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./src/index.js"],"names":["convertError","response","ok","json","then","err","Promise","reject","errMsgs","triggerLoginService","enteredUsername","fetch","method","headers","body","JSON","stringify","userName","error","getLogIn","chefName","Headers","code","iife","listEl","document","querySelector","usernameBox","loginButton","loginAreaEl","errorEl","outputEl","loggedInUserEl","loggedIn","showContent","hidden","renderItems","console","log","innerHTML","populateItems","items","table","username","updateStatus","message","status","innerText","disableLoginWhenEmpty","addEventListener","evt","disabled","performLogin","e","target","classList","contains","value"],"mappings":"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","file":"index.js","sourcesContent":["export const convertError = (response) => {\n    if(response.ok) {\n      return response.json();\n    }\n    return response.json()\n    .then( err => Promise.reject(err) );\n  }\n\nexport const errMsgs = {\n    'duplicate': 'That name already exists!\\nPlease enter a new item... I am confused sir',\n    'network-error': 'Request Timeout: Server seems to be down!',\n};\n\nexport const triggerLoginService = ( enteredUsername ) => {\n    return fetch(`/login`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body : JSON.stringify({userName: enteredUsername}),\n    })\n    .catch( () => Promise.reject( { error: 'network-error' }) )\n    .then( convertError)\n};\n\nexport const getLogIn = (chefName) => {\n    return fetch('/session', {\n        method: 'POST',\n        headers: new Headers({'content-type': 'application/json'}),\n        body: JSON.stringify({ chefName }),\n    })\n    .catch( () => { return Promise.reject({code: 'network-error'});})\n    .then( (convertError)) \n};\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { triggerLoginService, convertError, errMsgs } from './services';\n\n(function iife() {\n\n    const listEl = document.querySelector('.items');\n    const usernameBox = document.querySelector('.login-area').querySelector('.uname-input');\n    const loginButton = document.querySelector('.login-area').querySelector('.login-btn');\n    const loginAreaEl = document.querySelector('.login-area');\n    const errorEl = document.querySelector('.error');\n    const outputEl = document.querySelector('.output');\n\n    const loggedInUserEl = document.querySelector('.logged-in-user');\n\n    let loggedIn;\n    let userName;\n\n    function showContent() {\n      document.querySelector('.login-page').hidden = true;\n      document.querySelector('.item-list').hidden = false;\n    }\n\n    function renderItems( userName ) {    \n        // const html =  Object.values(username).map(\n        //   (username) => `\n        //       <li>\n        //         ${username}\n        //       </li>`\n        // ).join('');\n        // listEl.innerHTML = html;\n        console.log(`Global Logged In Variable: ${loggedIn}`);\n        if (loggedIn) {\n          console.log(\"I antered the right if\");\n          loggedInUserEl.innerHTML = `Welcome, ${userName}`;\n          showContent();\n        }\n    }\n\n    function populateItems() {\n        fetch('/items/', {\n            method: 'GET',\n            headers: {'Content-Type': 'application/json'},\n        })\n        .catch( () => Promise.reject( { error: 'network-error' }) )\n        .then( convertError)\n        .then( items => {\n            console.log(items)\n            console.table(items);\n            loggedIn = items.loggedIn;\n            console.log(loggedIn);\n            userName = items.username;\n            console.log(`Username: ${userName}`);\n            renderItems(userName);\n        })\n        .catch( err => {\n        updateStatus(errMsgs[err.error] || err.error);\n        });\n    }\n\n    function updateStatus( message, status ) {\n        if (status == \"success\") {\n          outputEl.innerText = message;\n        } else if (status == \"failure\") {\n          errorEl.innerText = message;\n        }\n    }\n\n    function disableLoginWhenEmpty() {\n      usernameBox.addEventListener('input', (evt) => {\n        loginButton.disabled = false;\n      });\n    }\n\n\n\n    function performLogin() {\n        loginAreaEl.addEventListener('click', (e) => {\n          if(e.target.classList.contains('login-btn') ) {\n            console.log('login button clicked!');\n            const enteredUsername = usernameBox.value;\n            if(enteredUsername) {\n                fetch(`/login`, {\n                  method: 'POST',\n                  headers: {'Content-Type': 'application/json'},\n                  body : JSON.stringify({userName: enteredUsername}),\n                })\n                .catch( () => Promise.reject( { error: 'network-error' }) )\n                .then( convertError)\n                .then( items => {\n                    showContent();\n                    console.log(items);\n                    userName = items.username;\n                    loggedIn = true;\n\n                    renderItems(userName);\n                    updateStatus(`${userName} logged In Successfully!`, \"success\");\n                })\n                .catch( err => {\n                  updateStatus(errMsgs[err.error] || err.error, \"failure\");\n                });\n            }\n          }\n        });\n    }\n\n    performLogin();\n    populateItems();\n    disableLoginWhenEmpty();\n})();"],"sourceRoot":""}