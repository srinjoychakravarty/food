{"version":3,"sources":["webpack://food/./src/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./src/index.js"],"names":["errMsgs","getHome","fetch","method","headers","Promise","reject","code","then","convertError","response","ok","json","err","iife","listEl","document","querySelector","usernameBox","titleBox","authorBox","ingredientsBox","instructionsBox","loginButton","recipeButton","loginAreaEl","errorEl","outputEl","loggedInUserEl","logoutAreaEl","loginPageEl","createRecipeEl","recipeListEl","bodyEl","loggedIn","userName","enableRecipeCreation","addEventListener","event","value","disabled","submitRecipe","e","target","classList","contains","rawtitle","rawAuthor","rawIngredients","rawInstructions","body","JSON","stringify","title","author","ingredients","instructions","error","recipeObjects","recipeIDArray","Object","keys","updateStatus","showContent","hidden","showLogin","renderItems","console","log","innerHTML","populateItems","items","username","message","status","innerText","disableLoginWhenEmpty","evt","performLogin","enteredUsername","performLogout","logoutMessage"],"mappings":"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","file":"index.js","sourcesContent":["\nexport const errMsgs = {\n    'duplicate': 'That name already exists!\\nPlease enter a new item... I am confused sir',\n    'network-error': 'Request Timeout: Server seems to be down!',\n};\n\n// export const triggerLoginService = ( enteredUsername ) => {\n//     return fetch(`/login`, {\n//         method: 'POST',\n//         headers: {'Content-Type': 'application/json'},\n//         body : JSON.stringify({userName: enteredUsername}),\n//     })\n//     .catch( () => Promise.reject( { error: 'network-error' }) )\n//     .then( convertError)\n// };\n\n// export const getLogIn = (chefName) => {\n//     return fetch('/session', {\n//         method: 'POST',\n//         headers: new Headers({'content-type': 'application/json'}),\n//         body: JSON.stringify({ chefName }),\n//     })\n//     .catch( () => { return Promise.reject({code: 'network-error'});})\n//     .then( (convertError)) \n// };\n\n\n//new one\nexport const getHome = () => {\n    return fetch('/home', {\n        method: 'GET',\n        headers: {'Content-Type': 'application/json'},\n      })\n      .catch( () => {\n        return Promise.reject({code: 'network-error'});\n      })\n      .then( (convertError));\n};\n\n\nexport const convertError = (response) => {\n    if(response.ok) {\n      return response.json();\n    }\n    return response.json()\n    .then( err => Promise.reject(err) );\n  }\n\n\n ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { errMsgs, getHome, convertError, convertHTML } from './services';\n\n(function iife() {\n\n    const listEl = document.querySelector('.items');\n    const usernameBox = document.querySelector('.login-area').querySelector('.uname-input');\n\n    const titleBox = document.querySelector(\"form[name='new-recipe'] input[name='title']\");\n    const authorBox = document.querySelector(\"form[name='new-recipe'] input[name='author']\");\n    const ingredientsBox = document.querySelector(\"form[name='new-recipe'] textarea[name='ingredients']\");\n    const instructionsBox = document.querySelector(\"form[name='new-recipe'] textarea[name='instructions']\");\n    \n    const loginButton = document.querySelector('.login-area').querySelector('.login-btn');\n    const recipeButton = document.querySelector('.create-recipe').querySelector('.form-btn');\n    const loginAreaEl = document.querySelector('.login-area');\n    const errorEl = document.querySelector('.error');\n    const outputEl = document.querySelector('.output');\n    const loggedInUserEl = document.querySelector('.logged-in-user');\n    const logoutAreaEl = document.querySelector('.logout-area');\n    const loginPageEl = document.querySelector('.login-page');\n    const createRecipeEl = document.querySelector('.create-recipe');\n    const recipeListEl = document.querySelector('.recipe-list');\n\n    const bodyEl = document.querySelector('.spa');\n\n    let loggedIn;\n    let userName;\n\n    function enableRecipeCreation() {\n      bodyEl.addEventListener('click', event => {\n        if (titleBox.value != \"\" && authorBox.value !== \"\" && ingredientsBox.value !== \"\" && instructionsBox.value !== \"\") {\n          recipeButton.disabled = false;\n        }\n      });\n    }\n\n    function submitRecipe() {\n      createRecipeEl.addEventListener('click', (e) => {\n        if(e.target.classList.contains('form-btn') ) { \n\n          const rawtitle = titleBox.value;\n          const rawAuthor = authorBox.value;\n          const rawIngredients = ingredientsBox.value;\n          const rawInstructions = instructionsBox.value;\n          \n          fetch(`/recipe`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body : JSON.stringify({title: rawtitle, author: rawAuthor, ingredients: rawIngredients, instructions: rawInstructions}),\n          })\n          .catch( () => Promise.reject( { error: 'network-error' }) )\n          .then( convertError)\n          .then( recipeObjects => {\n\n            let recipeIDArray = Object.keys(recipeObjects);\n\n            // for (const recipe of recipeIDArray) {\n            //   console.table(recipeObjects[recipe].author);\n            // }\n\n            // recipeIDArray.forEach(recipe => console.table(recipeObjects[recipe].title));\n\n            // renderItems(items);\n            // updateStatus('Incremented Quantity by 1!', \"success\");\n          })\n          .catch( err => {\n            updateStatus(errMsgs[err.error] || err.error, \"failure\");\n          });\n\n        } \n      });\n    }\n\n\n    function showContent() {\n      loggedInUserEl.hidden = false;\n      logoutAreaEl.hidden = false;\n      createRecipeEl.hidden = false;\n      loginPageEl.hidden = true;\n      recipeListEl.hidden = false;\n    }\n\n    function showLogin() {\n      loggedInUserEl.hidden = true;\n      logoutAreaEl.hidden = true;\n      createRecipeEl.hidden = true;\n      loginPageEl.hidden = false;\n      recipeListEl.hidden = true;\n    }\n\n    function renderItems( userName ) {    \n        // const html =  Object.values(username).map(\n        //   (username) => `\n        //       <li>\n        //         ${username}\n        //       </li>`\n        // ).join('');\n        // listEl.innerHTML = html;\n        console.log(`Global Logged In Variable: ${loggedIn}`);\n        if (loggedIn) {\n          console.log(\"I antered the right if\");\n          loggedInUserEl.innerHTML = `Welcome, ${userName}`;\n          showContent();\n        }\n    }\n\n    function populateItems() {\n      getHome()\n      .then( items => {\n          loggedIn = items.loggedIn;\n          userName = items.username;\n          renderItems(userName);\n      })\n      .catch( err => {\n      updateStatus(errMsgs[err.error] || err.error);\n      });\n    };\n  \n    function updateStatus( message, status ) {\n        if (status == \"success\") {\n          outputEl.innerText = message;\n        } else if (status == \"failure\") {\n          errorEl.innerText = message;\n        }\n    }\n\n    function disableLoginWhenEmpty() {\n      usernameBox.addEventListener('input', (evt) => {\n        loginButton.disabled = false;\n      });\n    }\n\n\n\n    function performLogin() {\n        loginAreaEl.addEventListener('click', (e) => {\n          if(e.target.classList.contains('login-btn') ) {\n            console.log('login button clicked!');\n            const enteredUsername = usernameBox.value;\n            if(enteredUsername) {\n                fetch(`/login`, {\n                  method: 'POST',\n                  headers: {'Content-Type': 'application/json'},\n                  body : JSON.stringify({userName: enteredUsername}),\n                })\n                .catch( () => Promise.reject( { error: 'network-error' }) )\n                .then( convertError)\n                .then( items => {\n                    showContent();\n                    userName = items.username;\n                    loggedIn = true;\n                    renderItems(userName);\n                    updateStatus(`${userName} Logged in successfully!`, \"success\");\n                })\n                .catch( err => {\n                  updateStatus(errMsgs[err.error] || err.error, \"failure\");\n                });\n            }\n          }\n        });\n    }\n\n    function performLogout() {\n      logoutAreaEl.addEventListener('click', (e) => {\n        if(e.target.classList.contains('fa-sign-out-alt') ) {\n          console.log('logout button clicked');\n          fetch(`/logout`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n          })\n          .catch( () => Promise.reject( { error: 'network-error' }) )\n          .then( convertError)\n          .then( items => {\n            showLogin();\n            const logoutMessage = items.message;\n            updateStatus(`${logoutMessage} Logged out Successfully!`, \"success\");\n          })\n          .catch( err => {\n            updateStatus(errMsgs[err.error] || err.error, \"failure\");\n          });\n        }\n      });\n    }\n    \n    submitRecipe();\n    enableRecipeCreation();\n    performLogout();\n    performLogin();\n    populateItems();\n    disableLoginWhenEmpty();\n})();"],"sourceRoot":""}