{"version":3,"sources":["webpack://food/./src/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./src/index.js"],"names":["errMsgs","getHome","fetch","method","headers","Promise","reject","code","then","convertError","response","ok","json","err","iife","listEl","document","querySelector","usernameBox","loginButton","loginAreaEl","errorEl","outputEl","loggedInUserEl","logoutAreaEl","loggedIn","userName","showContent","hidden","showLogin","renderItems","console","log","innerHTML","populateItems","items","username","updateStatus","error","message","status","innerText","disableLoginWhenEmpty","addEventListener","evt","disabled","performLogin","e","target","classList","contains","enteredUsername","value","body","JSON","stringify","performLogout","logoutMessage"],"mappings":"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","file":"index.js","sourcesContent":["\nexport const errMsgs = {\n    'duplicate': 'That name already exists!\\nPlease enter a new item... I am confused sir',\n    'network-error': 'Request Timeout: Server seems to be down!',\n};\n\n// export const triggerLoginService = ( enteredUsername ) => {\n//     return fetch(`/login`, {\n//         method: 'POST',\n//         headers: {'Content-Type': 'application/json'},\n//         body : JSON.stringify({userName: enteredUsername}),\n//     })\n//     .catch( () => Promise.reject( { error: 'network-error' }) )\n//     .then( convertError)\n// };\n\n// export const getLogIn = (chefName) => {\n//     return fetch('/session', {\n//         method: 'POST',\n//         headers: new Headers({'content-type': 'application/json'}),\n//         body: JSON.stringify({ chefName }),\n//     })\n//     .catch( () => { return Promise.reject({code: 'network-error'});})\n//     .then( (convertError)) \n// };\n\n\n//new one\nexport const getHome = () => {\n    return fetch('/home', {\n        method: 'GET',\n        headers: {'Content-Type': 'application/json'},\n      })\n      .catch( () => {\n        return Promise.reject({code: 'network-error'});\n      })\n      .then( (convertError));\n};\n\n\nexport const convertError = (response) => {\n    if(response.ok) {\n      return response.json();\n    }\n    return response.json()\n    .then( err => Promise.reject(err) );\n  }\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { errMsgs, getHome, convertError, } from './services';\n\n(function iife() {\n\n    const listEl = document.querySelector('.items');\n    const usernameBox = document.querySelector('.login-area').querySelector('.uname-input');\n    const loginButton = document.querySelector('.login-area').querySelector('.login-btn');\n    const loginAreaEl = document.querySelector('.login-area');\n    const errorEl = document.querySelector('.error');\n    const outputEl = document.querySelector('.output');\n    const loggedInUserEl = document.querySelector('.logged-in-user');\n    const logoutAreaEl = document.querySelector('.logout-area');\n\n    let loggedIn;\n    let userName;\n\n    function showContent() {\n      document.querySelector('.login-page').hidden = true;\n      document.querySelector('.item-list').hidden = false;\n    }\n\n    function showLogin() {\n      // document.querySelector('.login-page').classList.remove('hidden');\n      // document.querySelector('.item-list').classList.add('hidden');\n      document.querySelector('.login-page').hidden = false;\n      document.querySelector('.item-list').hidden = true;\n    }\n\n    function renderItems( userName ) {    \n        // const html =  Object.values(username).map(\n        //   (username) => `\n        //       <li>\n        //         ${username}\n        //       </li>`\n        // ).join('');\n        // listEl.innerHTML = html;\n        console.log(`Global Logged In Variable: ${loggedIn}`);\n        if (loggedIn) {\n          console.log(\"I antered the right if\");\n          loggedInUserEl.innerHTML = `Welcome, ${userName}`;\n          showContent();\n        }\n    }\n\n    function populateItems() {\n      getHome()\n      .then( items => {\n          loggedIn = items.loggedIn;\n          userName = items.username;\n          renderItems(userName);\n      })\n      .catch( err => {\n      updateStatus(errMsgs[err.error] || err.error);\n      });\n    };\n  \n    function updateStatus( message, status ) {\n        if (status == \"success\") {\n          outputEl.innerText = message;\n        } else if (status == \"failure\") {\n          errorEl.innerText = message;\n        }\n    }\n\n    function disableLoginWhenEmpty() {\n      usernameBox.addEventListener('input', (evt) => {\n        loginButton.disabled = false;\n      });\n    }\n\n    function performLogin() {\n        loginAreaEl.addEventListener('click', (e) => {\n          if(e.target.classList.contains('login-btn') ) {\n            console.log('login button clicked!');\n            const enteredUsername = usernameBox.value;\n            if(enteredUsername) {\n                fetch(`/login`, {\n                  method: 'POST',\n                  headers: {'Content-Type': 'application/json'},\n                  body : JSON.stringify({userName: enteredUsername}),\n                })\n                .catch( () => Promise.reject( { error: 'network-error' }) )\n                .then( convertError)\n                .then( items => {\n                    showContent();\n                    userName = items.username;\n                    loggedIn = true;\n                    renderItems(userName);\n                    updateStatus(`${userName} Logged in successfully!`, \"success\");\n                })\n                .catch( err => {\n                  updateStatus(errMsgs[err.error] || err.error, \"failure\");\n                });\n            }\n          }\n        });\n    }\n\n    function performLogout() {\n      logoutAreaEl.addEventListener('click', (e) => {\n        if(e.target.classList.contains('fa-sign-out-alt') ) {\n          console.log('logout button clicked');\n          fetch(`/logout`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n          })\n          .catch( () => Promise.reject( { error: 'network-error' }) )\n          .then( convertError)\n          .then( items => {\n            showLogin();\n            const logoutMessage = items.message;\n            updateStatus(`${logoutMessage} Logged out Successfully!`, \"success\");\n          })\n          .catch( err => {\n            updateStatus(errMsgs[err.error] || err.error, \"failure\");\n          });\n        }\n      });\n    }\n  \n    performLogout();\n    performLogin();\n    populateItems();\n    disableLoginWhenEmpty();\n})();"],"sourceRoot":""}